"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from decouple import config
from dotenv import load_dotenv
from pathlib import Path
import cloudinary
import cloudinary.uploader
from cloudinary.utils import cloudinary_url
import dj_database_url
    
cloudinary.config( 
  cloud_name = "dct8gxufm", 
  api_key = "353148457964129", 
  api_secret = "5o3vTh76Mg-QqhhmagIfHnDis5c" 
)

cloudinary.uploader.upload("https://upload.wikimedia.org/wikipedia/commons/a/ae/Olympic_flag.jpg",
                             public_id="olympic_flag")
url, options = cloudinary_url("olympic_flag", width=100, height=150, crop="fill")

  
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
dotenv_path = os.path.join(BASE_DIR, '.env')
load_dotenv(dotenv_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', "s!12zl_nvk@^gyzg@2*-9&qx$20w9#qzv%oc4gbmsoot8c*vl&")

# SECRET_KEY = config('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', "True")=='True'

ALLOWED_HOSTS = ['127.0.0.1', 'localhost','django-ecommerce-app-1.onrender.com','https://django-ecommerce-ui.vercel.app/']


# Application definition

INSTALLED_APPS = [
    'payment.apps.PaymentConfig',
    'user',
    'cart',
    'Order.apps.OrderConfig',
    'Shipment.apps.ShipmentConfig',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products.apps.ProductsConfig',
    'categories.apps.CategoriesConfig',
    'corsheaders',
    'cloudinary'   
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {   
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': 'railway',           # Replace with your database name
#             'USER':  'root',             # Replace with PGUSER from Railway Variables
#             'PASSWORD': 'DqANLscyzvTwhKbuWpqRCnyExbROeAjB',      # Replace with PGPASSWORD from Railway Variables
#             'PORT': '10987' ,              # Replace with PGPORT from Railway Variables
#             'HOST' : 'monorail.proxy.rlwy.net',
#         }
#     }



DATABASES = {
    "default" : dj_database_url.parse('postgres://ecommerce_owx8_user:i9dO44oJ2UYilKmYy7yGumUyv2kBkmw4@dpg-codn55i0si5c7393rrig-a.oregon-postgres.render.com/ecommerce_owx8'),
        
}
    
# else:
#     DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ecommerce',           # Replace with your database name
#         'USER':  'root',             # Replace with PGUSER from Railway Variables
#         'PASSWORD': os.environ.get('LOCAL_PASSWORD'),      # Replace with PGPASSWORD from Railway Variables
#         'PORT': '3306',               # Replace with PGPORT from Railway Variables
#         'HOST' : '127.0.0.1'
#     }
# }
    


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static/')]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets') # for deployment

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = "user.User"

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "https://django-ecommerce-ui.vercel.app/"
]
CORS_ALLOW_CREDENTIALS = True
CSRF_COOKIES_SECURE=True